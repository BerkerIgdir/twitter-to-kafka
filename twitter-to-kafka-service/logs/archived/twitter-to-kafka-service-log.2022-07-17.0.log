2022-07-17 15:39:21 [main] INFO  com.twitter.app.TwitterToKafkaApp - Starting TwitterToKafkaApp using Java 17.0.3.0.1 on Berkers-MBP.fritz.box with PID 6358 (/Users/berkerigdir/twitter-app/app/twitter-to-kafka/target/classes started by berkerigdir in /Users/berkerigdir/twitter-app/app)
2022-07-17 15:39:21 [main] INFO  com.twitter.app.TwitterToKafkaApp - No active profile set, falling back to 1 default profile: "default"
2022-07-17 15:39:22 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2022-07-17 15:39:22 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2022-07-17 15:39:22 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2022-07-17 15:39:22 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.64]
2022-07-17 15:39:22 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2022-07-17 15:39:22 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 772 ms
2022-07-17 15:39:22 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2022-07-17 15:39:22 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2022-07-17 15:39:22 [main] INFO  com.twitter.app.TwitterToKafkaApp - Started TwitterToKafkaApp in 1.63 seconds (JVM running for 2.702)
2022-07-17 15:39:22 [main] INFO  com.twitter.app.TwitterToKafkaApp - The application starts up...
2022-07-17 15:39:22 [main] INFO  c.t.a.s.a.i.TwitterApiStreamConnectorImpl - {
	"delete": {
		"values": ["Java,Spring Boot,Berker,Turkey"]
	}
}
2022-07-17 15:39:23 [main] INFO  c.t.a.s.a.i.TwitterApiStreamConnectorImpl - {"meta":{"sent":"2022-07-17T13:39:24.084Z","summary":{"deleted":0,"not_deleted":1}},"errors":[{"errors":[{"parameters":{},"message":"Rule does not exist"}],"title":"Invalid Request","detail":"One or more parameters to your request was invalid.","type":"https://api.twitter.com/2/problems/invalid-request"}]}
2022-07-17 15:39:23 [main] INFO  c.t.a.s.a.i.TwitterApiStreamConnectorImpl - {"add" : [{
    "value": "Java",
    "tag": "Keyword: Java"
},{
    "value": "Spring Boot",
    "tag": "Keyword: Spring Boot"
},{
    "value": "Berker",
    "tag": "Keyword: Berker"
},{
    "value": "Turkey",
    "tag": "Keyword: Turkey"
}]}

2022-07-17 15:39:24 [main] INFO  c.t.a.s.a.i.TwitterApiStreamConnectorImpl - {"meta":{"sent":"2022-07-17T13:39:24.441Z","summary":{"created":0,"not_created":4,"valid":0,"invalid":4}},"errors":[{"value":"Java","id":"1548294593510223875","title":"DuplicateRule","type":"https://api.twitter.com/2/problems/duplicate-rules"},{"value":"Turkey","id":"1548294593510223874","title":"DuplicateRule","type":"https://api.twitter.com/2/problems/duplicate-rules"},{"value":"Spring Boot","id":"1548294593510223872","title":"DuplicateRule","type":"https://api.twitter.com/2/problems/duplicate-rules"},{"value":"Berker","id":"1548294593510223873","title":"DuplicateRule","type":"https://api.twitter.com/2/problems/duplicate-rules"}]}
2022-07-17 15:39:28 [reactor-http-nio-2] INFO  c.t.a.s.a.i.TwitterApiStreamConnectorImpl - {"data":{"created_at":"2022-07-17T13:39:22.000Z","id":"1548663655746752512","public_metrics":{"retweet_count":0,"reply_count":0,"like_count":0,"quote_count":0},"text":"Nice https://t.co/E7ld37xM1s"},"matching_rules":[{"id":"1548294593510223875","tag":"Keyword: Java"}]}
2022-07-17 15:39:28 [reactor-http-nio-2] INFO  c.t.a.s.a.i.TwitterApiStreamConnectorImpl - {"data":{"created_at":"2022-07-17T13:39:22.000Z","id":"1548663653917933569","public_metrics":{"retweet_count":0,"reply_count":0,"like_count":0,"quote_count":0},"text":"been in turkey for 12 hours and haven‚Äôt seen a single cat so far i feel betrayed üòæ"},"matching_rules":[{"id":"1548294593510223874","tag":"Keyword: Turkey"}]}
2022-07-17 15:39:28 [reactor-http-nio-2] INFO  c.t.a.s.a.i.TwitterApiStreamConnectorImpl - {"data":{"created_at":"2022-07-17T13:39:23.000Z","id":"1548663657135050752","public_metrics":{"retweet_count":0,"reply_count":0,"like_count":0,"quote_count":0},"text":"For the benefit of the BBC:\nIn summer it gets hot.\nIn winter it gets cold.\nIn spring and autumn, it's neither too hot nor too cold.\nSometimes it's dry, sometimes it's wet.\nThere you go. Job's a good 'un and I've saved a fortune for the Met Office."},"matching_rules":[{"id":"1547657797826854917","tag":"Keyword: Spring"}]}
2022-07-17 15:39:29 [reactor-http-nio-2] INFO  c.t.a.s.a.i.TwitterApiStreamConnectorImpl - {"data":{"created_at":"2022-07-17T13:39:24.000Z","id":"1548663661190840321","public_metrics":{"retweet_count":0,"reply_count":0,"like_count":0,"quote_count":0},"text":"Splinter Cell https://t.co/Eukl9R484W"},"matching_rules":[{"id":"1548294593510223875","tag":"Keyword: Java"}]}
2022-07-17 15:39:29 [reactor-http-nio-2] INFO  c.t.a.s.a.i.TwitterApiStreamConnectorImpl - {"data":{"created_at":"2022-07-17T13:39:24.000Z","id":"1548663661924843528","public_metrics":{"retweet_count":519,"reply_count":0,"like_count":0,"quote_count":0},"text":"RT @saintdemie: versus by versace, spring-summer 1995 https://t.co/1GRGrp6ZLA"},"matching_rules":[{"id":"1547657797826854917","tag":"Keyword: Spring"}]}
2022-07-17 15:39:29 [reactor-http-nio-2] INFO  c.t.a.s.a.i.TwitterApiStreamConnectorImpl - {"data":{"created_at":"2022-07-17T13:39:24.000Z","id":"1548663661052366848","public_metrics":{"retweet_count":31,"reply_count":0,"like_count":0,"quote_count":0},"text":"RT @kongbz_gimpact: Spring Summer Fall Winter\n#Genshinlmpact #ÂéüÁ•û https://t.co/esN7e2Rj07"},"matching_rules":[{"id":"1547657797826854917","tag":"Keyword: Spring"}]}
2022-07-17 15:39:30 [reactor-http-nio-2] INFO  c.t.a.s.a.i.TwitterApiStreamConnectorImpl - {"data":{"created_at":"2022-07-17T13:39:25.000Z","id":"1548663666723016704","public_metrics":{"retweet_count":0,"reply_count":0,"like_count":0,"quote_count":0},"text":"@gino_kiyo „ÅîËøî‰ø°‰∏¶„Å≥„Å´Âø´Ë´æ„ÅÑ„Åü„Å†„Åç„ÅÇ„Çä„Åå„Å®„ÅÜ„Åî„Åñ„ÅÑ„Åæ„Åô„ÄÇ\n„Åì„ÅÆÂæåDM„ÅäÈÄÅ„Çä„Åï„Åõ„Å¶„ÅÑ„Åü„Å†„Åç„Åæ„Åô„Å≠„ÄÇ\n„Åì„ÅÆÂ∫¶„ÅÆ„ÅäÂèñÂºï„ÇÇ„Å©„ÅÜ„Åû„Çà„Çç„Åó„Åè„ÅäÈ°ò„ÅÑ„ÅÑ„Åü„Åó„Åæ„Åô„ÄÇ"},"matching_rules":[{"id":"1547657797826854917","tag":"Keyword: Spring"}]}
2022-07-17 15:39:31 [reactor-http-nio-2] INFO  c.t.a.s.a.i.TwitterApiStreamConnectorImpl - {"data":{"created_at":"2022-07-17T13:39:26.000Z","id":"1548663670032502792","public_metrics":{"retweet_count":508,"reply_count":0,"like_count":0,"quote_count":0},"text":"RT @adampayne26: Penny Mordaunt says the UK \"could never have used\" a veto to stop Turkey joining the EU. Sophie Raworth - correctly - says‚Ä¶"},"matching_rules":[{"id":"1548294593510223874","tag":"Keyword: Turkey"}]}
2022-07-17 15:39:31 [reactor-http-nio-2] INFO  c.t.a.s.a.i.TwitterApiStreamConnectorImpl - {"data":{"created_at":"2022-07-17T13:39:25.000Z","id":"1548663666744217600","public_metrics":{"retweet_count":193,"reply_count":0,"like_count":0,"quote_count":0},"text":"RT @DouglasLloydUK: Car crash interview from Penny Mordaunt on BBC as she repeatedly claims we didn‚Äôt have a veto on Turkey joining the EU,‚Ä¶"},"matching_rules":[{"id":"1548294593510223874","tag":"Keyword: Turkey"}]}
2022-07-17 15:39:32 [reactor-http-nio-2] INFO  c.t.a.s.a.i.TwitterApiStreamConnectorImpl - {"data":{"created_at":"2022-07-17T13:39:27.000Z","id":"1548663674310639616","public_metrics":{"retweet_count":31,"reply_count":0,"like_count":0,"quote_count":0},"text":"RT @kongbz_gimpact: Spring Summer Fall Winter\n#Genshinlmpact #ÂéüÁ•û https://t.co/esN7e2Rj07"},"matching_rules":[{"id":"1547657797826854917","tag":"Keyword: Spring"}]}
2022-07-17 15:39:32 [reactor-http-nio-2] INFO  c.t.a.s.a.i.TwitterApiStreamConnectorImpl - {"data":{"created_at":"2022-07-17T13:39:26.000Z","id":"1548663672142270466","public_metrics":{"retweet_count":70,"reply_count":0,"like_count":0,"quote_count":0},"text":"RT @MattGubba: Have landed in Turkey and it's close to 30 degrees at 11pm. \n\nBut bizarrely, there is no emergency here.\n\nWhat on earth is g‚Ä¶"},"matching_rules":[{"id":"1548294593510223874","tag":"Keyword: Turkey"}]}
2022-07-17 15:39:33 [reactor-http-nio-2] ERROR reactor.core.publisher.Operators - Operator called default onErrorDropped
reactor.core.Exceptions$ErrorCallbackNotImplemented: org.springframework.web.reactive.function.client.WebClientResponseException: 200 OK from GET https://api.twitter.com/2/tweets/search/stream?tweet.fields=created_at,public_metrics; nested exception is reactor.netty.http.client.PrematureCloseException: Connection prematurely closed DURING response
Caused by: org.springframework.web.reactive.function.client.WebClientResponseException: 200 OK from GET https://api.twitter.com/2/tweets/search/stream?tweet.fields=created_at,public_metrics; nested exception is reactor.netty.http.client.PrematureCloseException: Connection prematurely closed DURING response
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:229)
	at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:207)
	at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
	at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:2398)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2194)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onSubscribe(FluxOnErrorResume.java:74)
	at reactor.core.publisher.MonoJust.subscribe(MonoJust.java:55)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4397)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
	at reactor.core.publisher.Operators$MonoSubscriber.onError(Operators.java:1863)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onError(FluxOnAssembly.java:544)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onError(FluxMapFuseable.java:142)
	at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onError(FluxContextWrite.java:121)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onError(FluxMapFuseable.java:340)
	at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onError(FluxFilterFuseable.java:382)
	at reactor.core.publisher.MonoCollect$CollectSubscriber.onError(MonoCollect.java:145)
	at reactor.core.publisher.FluxMap$MapSubscriber.onError(FluxMap.java:134)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.onError(FluxPeek.java:222)
	at reactor.core.publisher.FluxMap$MapSubscriber.onError(FluxMap.java:134)
	at reactor.core.publisher.Operators.error(Operators.java:198)
	at reactor.netty.channel.FluxReceive.startReceiver(FluxReceive.java:172)
	at reactor.netty.channel.FluxReceive.subscribe(FluxReceive.java:143)
	at reactor.core.publisher.InternalFluxOperator.subscribe(InternalFluxOperator.java:62)
	at reactor.netty.ByteBufFlux.subscribe(ByteBufFlux.java:340)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4397)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onError(FluxOnAssembly.java:544)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onError(FluxMapFuseable.java:142)
	at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onError(FluxContextWrite.java:121)
	at reactor.core.publisher.FluxPeekFuseable$PeekConditionalSubscriber.onError(FluxPeekFuseable.java:903)
	at reactor.core.publisher.FluxConcatArray$ConcatArraySubscriber.onError(FluxConcatArray.java:207)
	at reactor.core.publisher.FluxFlattenIterable$FlattenIterableSubscriber.drainAsync(FluxFlattenIterable.java:321)
	at reactor.core.publisher.FluxFlattenIterable$FlattenIterableSubscriber.drain(FluxFlattenIterable.java:686)
	at reactor.core.publisher.FluxFlattenIterable$FlattenIterableSubscriber.onError(FluxFlattenIterable.java:257)
	at reactor.core.publisher.FluxMap$MapSubscriber.onError(FluxMap.java:134)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.onError(FluxPeek.java:222)
	at reactor.core.publisher.FluxMap$MapSubscriber.onError(FluxMap.java:134)
	at reactor.netty.channel.FluxReceive.terminateReceiver(FluxReceive.java:465)
	at reactor.netty.channel.FluxReceive.drainReceiver(FluxReceive.java:260)
	at reactor.netty.channel.FluxReceive.onInboundError(FluxReceive.java:453)
	at reactor.netty.channel.ChannelOperations.onInboundError(ChannelOperations.java:488)
	at reactor.netty.http.client.HttpClientOperations.onInboundClose(HttpClientOperations.java:298)
	at reactor.netty.channel.ChannelOperationsHandler.channelInactive(ChannelOperationsHandler.java:73)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:241)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelInactive(ChannelInboundHandlerAdapter.java:81)
	at io.netty.handler.timeout.IdleStateHandler.channelInactive(IdleStateHandler.java:277)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:241)
	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelInactive(CombinedChannelDuplexHandler.java:418)
	at io.netty.handler.codec.ByteToMessageDecoder.channelInputClosed(ByteToMessageDecoder.java:392)
	at io.netty.handler.codec.ByteToMessageDecoder.channelInactive(ByteToMessageDecoder.java:357)
	at io.netty.handler.codec.http.HttpClientCodec$Decoder.channelInactive(HttpClientCodec.java:326)
	at io.netty.channel.CombinedChannelDuplexHandler.channelInactive(CombinedChannelDuplexHandler.java:221)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:241)
	at io.netty.handler.codec.ByteToMessageDecoder.channelInputClosed(ByteToMessageDecoder.java:392)
	at io.netty.handler.codec.ByteToMessageDecoder.channelInactive(ByteToMessageDecoder.java:357)
	at io.netty.handler.ssl.SslHandler.channelInactive(SslHandler.java:1075)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:241)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelInactive(DefaultChannelPipeline.java:1405)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.DefaultChannelPipeline.fireChannelInactive(DefaultChannelPipeline.java:901)
	at io.netty.channel.AbstractChannel$AbstractUnsafe$7.run(AbstractChannel.java:813)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask$$$capture(AbstractEventExecutor.java:174)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute$$$capture(AbstractEventExecutor.java:167)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasksFrom(SingleThreadEventExecutor.java:426)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:375)
	at io.netty.util.concurrent.SingleThreadEventExecutor.confirmShutdown(SingleThreadEventExecutor.java:763)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:530)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: reactor.netty.http.client.PrematureCloseException: Connection prematurely closed DURING response
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ‚á¢ Body from GET https://api.twitter.com/2/tweets/search/stream?tweet.fields=created_at,public_metrics [DefaultClientResponse]
	*__checkpoint ‚á¢ Body from GET https://api.twitter.com/2/tweets/search/stream?tweet.fields=created_at,public_metrics [DefaultClientResponse]
Original Stack Trace:
2022-07-17 15:39:42 [main] INFO  com.twitter.app.TwitterToKafkaApp - Starting TwitterToKafkaApp using Java 17.0.3.0.1 on Berkers-MBP.fritz.box with PID 6361 (/Users/berkerigdir/twitter-app/app/twitter-to-kafka/target/classes started by berkerigdir in /Users/berkerigdir/twitter-app/app)
2022-07-17 15:39:42 [main] INFO  com.twitter.app.TwitterToKafkaApp - No active profile set, falling back to 1 default profile: "default"
2022-07-17 15:39:43 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2022-07-17 15:39:43 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2022-07-17 15:39:43 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2022-07-17 15:39:43 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.64]
2022-07-17 15:39:43 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2022-07-17 15:39:43 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 709 ms
2022-07-17 15:39:43 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2022-07-17 15:39:43 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2022-07-17 15:39:43 [main] INFO  com.twitter.app.TwitterToKafkaApp - Started TwitterToKafkaApp in 1.522 seconds (JVM running for 2.621)
2022-07-17 15:39:43 [main] INFO  com.twitter.app.TwitterToKafkaApp - The application starts up...
2022-07-17 15:39:43 [main] INFO  c.t.a.s.a.i.TwitterApiStreamConnectorImpl - {
	"delete": {
		"values": ["Java,Spring Boot,Berker,Turkey"]
	}
}
2022-07-17 15:39:44 [main] INFO  c.t.a.s.a.i.TwitterApiStreamConnectorImpl - {"meta":{"sent":"2022-07-17T13:39:44.861Z","summary":{"deleted":0,"not_deleted":1}},"errors":[{"errors":[{"parameters":{},"message":"Rule does not exist"}],"title":"Invalid Request","detail":"One or more parameters to your request was invalid.","type":"https://api.twitter.com/2/problems/invalid-request"}]}
2022-07-17 15:39:44 [main] INFO  c.t.a.s.a.i.TwitterApiStreamConnectorImpl - {"add" : [{
    "value": "Java",
    "tag": "Keyword: Java"
},{
    "value": "Spring Boot",
    "tag": "Keyword: Spring Boot"
},{
    "value": "Berker",
    "tag": "Keyword: Berker"
},{
    "value": "Turkey",
    "tag": "Keyword: Turkey"
}]}

2022-07-17 15:39:45 [main] INFO  c.t.a.s.a.i.TwitterApiStreamConnectorImpl - {"meta":{"sent":"2022-07-17T13:39:45.227Z","summary":{"created":0,"not_created":4,"valid":0,"invalid":4}},"errors":[{"value":"Java","id":"1548294593510223875","title":"DuplicateRule","type":"https://api.twitter.com/2/problems/duplicate-rules"},{"value":"Turkey","id":"1548294593510223874","title":"DuplicateRule","type":"https://api.twitter.com/2/problems/duplicate-rules"},{"value":"Spring Boot","id":"1548294593510223872","title":"DuplicateRule","type":"https://api.twitter.com/2/problems/duplicate-rules"},{"value":"Berker","id":"1548294593510223873","title":"DuplicateRule","type":"https://api.twitter.com/2/problems/duplicate-rules"}]}
2022-07-17 15:39:49 [reactor-http-nio-2] INFO  c.t.a.s.a.i.TwitterApiStreamConnectorImpl - {"data":{"created_at":"2022-07-17T13:39:43.000Z","id":"1548663742602379264","public_metrics":{"retweet_count":3,"reply_count":0,"like_count":0,"quote_count":0},"text":"RT @DesignsbyAudrey: Just in time for Spring! Green Butterfly Necklace and Earring Set by #DesignedbyAudrey.  Lovely womens #handmade jewel‚Ä¶"},"matching_rules":[{"id":"1547657797826854917","tag":"Keyword: Spring"}]}
2022-07-17 15:39:49 [reactor-http-nio-2] INFO  c.t.a.s.a.i.TwitterApiStreamConnectorImpl - {"data":{"created_at":"2022-07-17T13:39:43.000Z","id":"1548663741818216450","public_metrics":{"retweet_count":0,"reply_count":0,"like_count":0,"quote_count":0},"text":"C#„Å£„Å¶„ÇÇ„Å®„ÇÇ„Å®C++„ÇÑJava„Çí„Éô„Éº„Çπ„Å´ÂïèÈ°åÁÇπ„ÇíËß£Ê∂à„Åô„Çã„Çà„ÅÜ„Å™ÊÑü„Åò„ÅßÈñãÁô∫„Åï„Çå„Åü„Çì„Åò„ÇÉ„Å™„Åã„Å£„Åü„Åã„Å™„ÄÅÁ¢∫„Åã„ÄÇJava„ÅØC#„ÅÆ„ÅîÂÖàÁ•ñ„Åï„Åæ„Åø„Åü„ÅÑ„Å™„ÇÇ„Çì„ÄÇ„Åù„ÅÆ„ÅÇ„Å®C#„ÅÆÊ©üËÉΩ„ÅåJava„Å´ÈÄÜËº∏ÂÖ•„Åï„Çå„Åü„Çä„Å®„Åã„ÇÇ„ÅÇ„Å£„Åü„Å®ÊÄù„ÅÑ„Åæ„Åô https://t.co/av20oPyusE"},"matching_rules":[{"id":"1548294593510223875","tag":"Keyword: Java"}]}
2022-07-17 15:39:49 [reactor-http-nio-2] INFO  c.t.a.s.a.i.TwitterApiStreamConnectorImpl - {"data":{"created_at":"2022-07-17T13:39:43.000Z","id":"1548663742044446722","public_metrics":{"retweet_count":0,"reply_count":0,"like_count":0,"quote_count":0},"text":"12 October 2007: Reflections on Armenia‚Äôs holocaust https://t.co/D9HeSNVfmF"},"matching_rules":[{"id":"1548294593510223874","tag":"Keyword: Turkey"}]}
2022-07-17 15:39:50 [reactor-http-nio-2] INFO  c.t.a.s.a.i.TwitterApiStreamConnectorImpl - {"data":{"created_at":"2022-07-17T13:39:44.000Z","id":"1548663746200891392","public_metrics":{"retweet_count":4851,"reply_count":0,"like_count":0,"quote_count":0},"text":"RT @YSL: Photocall\nMen's Spring Summer 23\nby Anthony Vaccarello\n\n#YSL #SaintLaurent #YvesSaintLaurent\n#MSS23 #Agafay https://t.co/FTepqCFr5S"},"matching_rules":[{"id":"1547657797826854917","tag":"Keyword: Spring"}]}
2022-07-17 15:39:50 [reactor-http-nio-2] INFO  c.t.a.s.a.i.TwitterApiStreamConnectorImpl - {"data":{"created_at":"2022-07-17T13:39:44.000Z","id":"1548663747149021186","public_metrics":{"retweet_count":0,"reply_count":0,"like_count":0,"quote_count":0},"text":"Silver Spring, MD ‚Äì Several Injured in Three-Vehicle Accident at Colesville Rd &amp; University Blvd E https://t.co/PtVyt9xCpI"},"matching_rules":[{"id":"1547657797826854917","tag":"Keyword: Spring"}]}
2022-07-17 15:39:50 [reactor-http-nio-2] INFO  c.t.a.s.a.i.TwitterApiStreamConnectorImpl - {"data":{"created_at":"2022-07-17T13:39:45.000Z","id":"1548663748277112832","public_metrics":{"retweet_count":0,"reply_count":0,"like_count":0,"quote_count":0},"text":"@MadiskarteAcads yes po, for both java and kotlin languages po! üíó"},"matching_rules":[{"id":"1548294593510223875","tag":"Keyword: Java"}]}
2022-07-17 15:39:51 [reactor-http-nio-2] INFO  c.t.a.s.a.i.TwitterApiStreamConnectorImpl - {"data":{"created_at":"2022-07-17T13:39:45.000Z","id":"1548663751456526337","public_metrics":{"retweet_count":0,"reply_count":0,"like_count":0,"quote_count":0},"text":"this literally makes me want to scream because of the stupidity https://t.co/AzKDrz79ag"},"matching_rules":[{"id":"1548294593510223874","tag":"Keyword: Turkey"}]}
2022-07-17 15:39:51 [reactor-http-nio-2] INFO  c.t.a.s.a.i.TwitterApiStreamConnectorImpl - {"data":{"created_at":"2022-07-17T13:39:45.000Z","id":"1548663750697385986","public_metrics":{"retweet_count":8713,"reply_count":0,"like_count":0,"quote_count":0},"text":"RT @foreverimbetter: Glad to see people waking up to the fact summer is a horrible ass season. Don‚Äôt nobody wanna be dealing with 100+ weat‚Ä¶"},"matching_rules":[{"id":"1547657797826854917","tag":"Keyword: Spring"}]}
2022-07-17 15:39:51 [reactor-http-nio-2] INFO  c.t.a.s.a.i.TwitterApiStreamConnectorImpl - {"data":{"created_at":"2022-07-17T13:39:45.000Z","id":"1548663751850721280","public_metrics":{"retweet_count":0,"reply_count":0,"like_count":0,"quote_count":0},"text":"I lost a follower over this üòÇ https://t.co/NT1qbZzVUA"},"matching_rules":[{"id":"1548294593510223874","tag":"Keyword: Turkey"}]}
2022-07-17 15:39:51 [reactor-http-nio-2] INFO  c.t.a.s.a.i.TwitterApiStreamConnectorImpl - {"data":{"created_at":"2022-07-17T13:39:45.000Z","id":"1548663751397691392","public_metrics":{"retweet_count":17,"reply_count":0,"like_count":0,"quote_count":0},"text":"RT @SupportForMT: 17.07.2022 ‡∏™‡∏∏‡∏î‡∏™‡∏±‡∏õ‡∏î‡∏≤‡∏´‡πå‡πÇ‡∏û‡∏™‡∏ï‡πå‡∏†‡∏≤‡∏û #MarkTuan ‡∏ö‡∏ô IG ‡∏Ñ‡πà‡∏∞\n\n\"‡πÄ‡∏Å‡πá‡∏ö‡∏•‡∏∏‡∏Ñ‡∏´‡∏•‡πà‡∏≠ ‡∏Ç‡∏≠‡∏á‡∏´‡∏ô‡∏∏‡πà‡∏° Mark Tuan ‡∏Ç‡∏ì‡∏∞‡πÑ‡∏õ‡∏£‡πà‡∏ß‡∏°‡∏á‡∏≤‡∏ô‡πÅ‡∏ü‡∏ä‡∏±‡πà‡∏ô‡πÇ‡∏ä‡∏ß‡πå‡πÅ‡∏ö‡∏£‡∏ô‡∏î‡πå Saint Lau‚Ä¶"},"matching_rules":[{"id":"1547657797826854917","tag":"Keyword: Spring"}]}
2022-07-17 15:39:51 [reactor-http-nio-2] INFO  c.t.a.s.a.i.TwitterApiStreamConnectorImpl - {"data":{"created_at":"2022-07-17T13:39:46.000Z","id":"1548663754509848578","public_metrics":{"retweet_count":0,"reply_count":0,"like_count":0,"quote_count":0},"text":"for today, just went with my go-to: brown rice and kimchi \n\nthen just added what i have - carrots, perilla leaf, spring onions, boiled chicken üòõ"},"matching_rules":[{"id":"1547657797826854917","tag":"Keyword: Spring"}]}
2022-07-17 15:39:52 [reactor-http-nio-2] INFO  c.t.a.s.a.i.TwitterApiStreamConnectorImpl - {"data":{"created_at":"2022-07-17T13:39:47.000Z","id":"1548663757014028289","public_metrics":{"retweet_count":6,"reply_count":0,"like_count":0,"quote_count":0},"text":"RT @knowprogram: Types of Computer üñ•Ô∏è\n\nüõ∞Ô∏è Retweet to share information\n#Python3 #programming #Python #Java #javascript #cybersecurity  #Cod‚Ä¶"},"matching_rules":[{"id":"1548294593510223875","tag":"Keyword: Java"}]}
2022-07-17 15:39:52 [reactor-http-nio-2] INFO  c.t.a.s.a.i.TwitterApiStreamConnectorImpl - {"data":{"created_at":"2022-07-17T13:39:46.000Z","id":"1548663754166046721","public_metrics":{"retweet_count":0,"reply_count":0,"like_count":0,"quote_count":0},"text":"@CoupleGreek Hello from turkey,i am waiting for izmir"},"matching_rules":[{"id":"1548294593510223874","tag":"Keyword: Turkey"}]}
2022-07-17 15:39:53 [reactor-http-nio-2] ERROR reactor.core.publisher.Operators - Operator called default onErrorDropped
reactor.core.Exceptions$ErrorCallbackNotImplemented: org.springframework.web.reactive.function.client.WebClientResponseException: 200 OK from GET https://api.twitter.com/2/tweets/search/stream?tweet.fields=created_at,public_metrics; nested exception is reactor.netty.http.client.PrematureCloseException: Connection prematurely closed DURING response
Caused by: org.springframework.web.reactive.function.client.WebClientResponseException: 200 OK from GET https://api.twitter.com/2/tweets/search/stream?tweet.fields=created_at,public_metrics; nested exception is reactor.netty.http.client.PrematureCloseException: Connection prematurely closed DURING response
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:229)
	at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:207)
	at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
	at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:2398)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2194)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onSubscribe(FluxOnErrorResume.java:74)
	at reactor.core.publisher.MonoJust.subscribe(MonoJust.java:55)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4397)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
	at reactor.core.publisher.Operators$MonoSubscriber.onError(Operators.java:1863)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onError(FluxOnAssembly.java:544)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onError(FluxMapFuseable.java:142)
	at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onError(FluxContextWrite.java:121)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onError(FluxMapFuseable.java:340)
	at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onError(FluxFilterFuseable.java:382)
	at reactor.core.publisher.MonoCollect$CollectSubscriber.onError(MonoCollect.java:145)
	at reactor.core.publisher.FluxMap$MapSubscriber.onError(FluxMap.java:134)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.onError(FluxPeek.java:222)
	at reactor.core.publisher.FluxMap$MapSubscriber.onError(FluxMap.java:134)
	at reactor.core.publisher.Operators.error(Operators.java:198)
	at reactor.netty.channel.FluxReceive.startReceiver(FluxReceive.java:172)
	at reactor.netty.channel.FluxReceive.subscribe(FluxReceive.java:143)
	at reactor.core.publisher.InternalFluxOperator.subscribe(InternalFluxOperator.java:62)
	at reactor.netty.ByteBufFlux.subscribe(ByteBufFlux.java:340)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4397)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onError(FluxOnAssembly.java:544)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onError(FluxMapFuseable.java:142)
	at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onError(FluxContextWrite.java:121)
	at reactor.core.publisher.FluxPeekFuseable$PeekConditionalSubscriber.onError(FluxPeekFuseable.java:903)
	at reactor.core.publisher.FluxConcatArray$ConcatArraySubscriber.onError(FluxConcatArray.java:207)
	at reactor.core.publisher.FluxFlattenIterable$FlattenIterableSubscriber.drainAsync(FluxFlattenIterable.java:321)
	at reactor.core.publisher.FluxFlattenIterable$FlattenIterableSubscriber.drain(FluxFlattenIterable.java:686)
	at reactor.core.publisher.FluxFlattenIterable$FlattenIterableSubscriber.onError(FluxFlattenIterable.java:257)
	at reactor.core.publisher.FluxMap$MapSubscriber.onError(FluxMap.java:134)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.onError(FluxPeek.java:222)
	at reactor.core.publisher.FluxMap$MapSubscriber.onError(FluxMap.java:134)
	at reactor.netty.channel.FluxReceive.terminateReceiver(FluxReceive.java:465)
	at reactor.netty.channel.FluxReceive.drainReceiver(FluxReceive.java:260)
	at reactor.netty.channel.FluxReceive.onInboundError(FluxReceive.java:453)
	at reactor.netty.channel.ChannelOperations.onInboundError(ChannelOperations.java:488)
	at reactor.netty.http.client.HttpClientOperations.onInboundClose(HttpClientOperations.java:298)
	at reactor.netty.channel.ChannelOperationsHandler.channelInactive(ChannelOperationsHandler.java:73)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:241)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelInactive(ChannelInboundHandlerAdapter.java:81)
	at io.netty.handler.timeout.IdleStateHandler.channelInactive(IdleStateHandler.java:277)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:241)
	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelInactive(CombinedChannelDuplexHandler.java:418)
	at io.netty.handler.codec.ByteToMessageDecoder.channelInputClosed(ByteToMessageDecoder.java:392)
	at io.netty.handler.codec.ByteToMessageDecoder.channelInactive(ByteToMessageDecoder.java:357)
	at io.netty.handler.codec.http.HttpClientCodec$Decoder.channelInactive(HttpClientCodec.java:326)
	at io.netty.channel.CombinedChannelDuplexHandler.channelInactive(CombinedChannelDuplexHandler.java:221)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:241)
	at io.netty.handler.codec.ByteToMessageDecoder.channelInputClosed(ByteToMessageDecoder.java:392)
	at io.netty.handler.codec.ByteToMessageDecoder.channelInactive(ByteToMessageDecoder.java:357)
	at io.netty.handler.ssl.SslHandler.channelInactive(SslHandler.java:1075)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:241)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelInactive(DefaultChannelPipeline.java:1405)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.DefaultChannelPipeline.fireChannelInactive(DefaultChannelPipeline.java:901)
	at io.netty.channel.AbstractChannel$AbstractUnsafe$7.run(AbstractChannel.java:813)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask$$$capture(AbstractEventExecutor.java:174)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute$$$capture(AbstractEventExecutor.java:167)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasksFrom(SingleThreadEventExecutor.java:426)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:375)
	at io.netty.util.concurrent.SingleThreadEventExecutor.confirmShutdown(SingleThreadEventExecutor.java:763)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:530)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: reactor.netty.http.client.PrematureCloseException: Connection prematurely closed DURING response
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ‚á¢ Body from GET https://api.twitter.com/2/tweets/search/stream?tweet.fields=created_at,public_metrics [DefaultClientResponse]
	*__checkpoint ‚á¢ Body from GET https://api.twitter.com/2/tweets/search/stream?tweet.fields=created_at,public_metrics [DefaultClientResponse]
Original Stack Trace:
2022-07-17 15:41:43 [main] INFO  com.twitter.app.TwitterToKafkaApp - Starting TwitterToKafkaApp using Java 17.0.3.0.1 on Berkers-MBP.fritz.box with PID 6382 (/Users/berkerigdir/twitter-app/app/twitter-to-kafka/target/classes started by berkerigdir in /Users/berkerigdir/twitter-app/app)
2022-07-17 15:41:43 [main] INFO  com.twitter.app.TwitterToKafkaApp - No active profile set, falling back to 1 default profile: "default"
2022-07-17 15:41:44 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2022-07-17 15:41:44 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2022-07-17 15:41:44 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2022-07-17 15:41:44 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.64]
2022-07-17 15:41:44 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2022-07-17 15:41:44 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 607 ms
2022-07-17 15:41:44 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2022-07-17 15:41:44 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2022-07-17 15:41:44 [main] INFO  com.twitter.app.TwitterToKafkaApp - Started TwitterToKafkaApp in 1.302 seconds (JVM running for 2.096)
2022-07-17 15:41:44 [main] INFO  com.twitter.app.TwitterToKafkaApp - The application starts up...
2022-07-17 15:41:44 [main] INFO  com.twitter.app.TwitterToKafkaApp - org.springframework.retry.support.RetryTemplate@3dc40ab9
2022-07-17 15:41:44 [main] INFO  c.t.a.s.a.i.TwitterApiStreamConnectorImpl - {
	"delete": {
		"values": ["Java,Spring Boot,Berker,Turkey"]
	}
}
2022-07-17 15:41:45 [main] INFO  c.t.a.s.a.i.TwitterApiStreamConnectorImpl - {"meta":{"sent":"2022-07-17T13:41:45.557Z","summary":{"deleted":0,"not_deleted":1}},"errors":[{"errors":[{"parameters":{},"message":"Rule does not exist"}],"title":"Invalid Request","detail":"One or more parameters to your request was invalid.","type":"https://api.twitter.com/2/problems/invalid-request"}]}
2022-07-17 15:41:45 [main] INFO  c.t.a.s.a.i.TwitterApiStreamConnectorImpl - {"add" : [{
    "value": "Java",
    "tag": "Keyword: Java"
},{
    "value": "Spring Boot",
    "tag": "Keyword: Spring Boot"
},{
    "value": "Berker",
    "tag": "Keyword: Berker"
},{
    "value": "Turkey",
    "tag": "Keyword: Turkey"
}]}

2022-07-17 15:41:45 [main] INFO  c.t.a.s.a.i.TwitterApiStreamConnectorImpl - {"meta":{"sent":"2022-07-17T13:41:45.913Z","summary":{"created":0,"not_created":4,"valid":0,"invalid":4}},"errors":[{"value":"Java","id":"1548294593510223875","title":"DuplicateRule","type":"https://api.twitter.com/2/problems/duplicate-rules"},{"value":"Turkey","id":"1548294593510223874","title":"DuplicateRule","type":"https://api.twitter.com/2/problems/duplicate-rules"},{"value":"Spring Boot","id":"1548294593510223872","title":"DuplicateRule","type":"https://api.twitter.com/2/problems/duplicate-rules"},{"value":"Berker","id":"1548294593510223873","title":"DuplicateRule","type":"https://api.twitter.com/2/problems/duplicate-rules"}]}
2022-07-17 15:41:50 [reactor-http-nio-2] INFO  c.t.a.s.a.i.TwitterApiStreamConnectorImpl - {"data":{"created_at":"2022-07-17T13:41:44.000Z","id":"1548664249882497024","public_metrics":{"retweet_count":0,"reply_count":0,"like_count":0,"quote_count":0},"text":"#Earthquake (#deprem) M2.8 strikes 12 km NE of #Soma (#Turkey) 5 min ago. More info: https://t.co/A3Z84FtnTS"},"matching_rules":[{"id":"1548294593510223874","tag":"Keyword: Turkey"}]}
2022-07-17 15:41:50 [reactor-http-nio-2] INFO  c.t.a.s.a.i.TwitterApiStreamConnectorImpl - {"data":{"created_at":"2022-07-17T13:41:44.000Z","id":"1548664249966280705","public_metrics":{"retweet_count":849,"reply_count":0,"like_count":0,"quote_count":0},"text":"RT @helenlewis: If Penny Mordaunt wins, and shows the same . . . flexibility with the truth in Downing Street that she's shown over gender‚Ä¶"},"matching_rules":[{"id":"1548294593510223874","tag":"Keyword: Turkey"}]}
2022-07-17 15:41:50 [reactor-http-nio-2] INFO  c.t.a.s.a.i.TwitterApiStreamConnectorImpl - {"data":{"created_at":"2022-07-17T13:41:45.000Z","id":"1548664253556703233","public_metrics":{"retweet_count":4,"reply_count":0,"like_count":0,"quote_count":0},"text":"RT @volleypronews: VNL 2022\nü•â \nTurkey üáπüá∑ 0-3 üá∑üá∏ Serbia (25-27, 17-25, 24-26)\n\nSara Lozo 19\nBianka Busa 14\nEbrar Karakurt 14 \nZehra Gunes 13‚Ä¶"},"matching_rules":[{"id":"1548294593510223874","tag":"Keyword: Turkey"}]}
2022-07-17 15:41:51 [reactor-http-nio-2] INFO  c.t.a.s.a.i.TwitterApiStreamConnectorImpl - {"data":{"created_at":"2022-07-17T13:41:46.000Z","id":"1548664256761016320","public_metrics":{"retweet_count":927,"reply_count":0,"like_count":0,"quote_count":0},"text":"RT @Studio_Creeat: Ê®πÊú®NFT„Çí‰øùÊúâ„Åô„Çã„Åì„Å®„Åß‰ªÆÊÉ≥ÈÄöË≤®SPR„ÅåË≤Ø„Åæ„ÇãPlaytoEarn„Ç≤„Éº„É†Spring Game„Å®„Ç≥„É©„ÉúCPÈñãÂÇ¨Ê±∫ÂÆöÔºÅ\n\n‚úÖË≥ûÂìÅ:ÁõÜÊ†ΩNFT1ÂÄã(Á¥Ñ3‰∏áÂÜÜÁõ∏ÂΩì)\n‚úÖÂøúÂãüÊñπÊ≥ï:RT(„Éï„Ç©„É≠„ÉØ„ÉºÈôêÂÆö)\n‚úÖÂøúÂãüÁ∑†Âàá:7/22(Èáë)\n\nÂÖ¨ÂºèÈÅãÂñ∂„ÅÆÂæ°‚Ä¶"},"matching_rules":[{"id":"1547657797826854917","tag":"Keyword: Spring"}]}
2022-07-17 15:41:51 [reactor-http-nio-2] INFO  c.t.a.s.a.i.TwitterApiStreamConnectorImpl - {"data":{"created_at":"2022-07-17T13:41:45.000Z","id":"1548664254001192963","public_metrics":{"retweet_count":0,"reply_count":0,"like_count":0,"quote_count":0},"text":"@GeoffreyDWest @BBCPolitics Her point was this: people were fed up of being in the EU because, in her opinion, politicking by Tory PM Cameron had put him between a rock and a hard place where his policy decision made it politically more difficult to exercise the veto that we definitely did have."},"matching_rules":[{"id":"1548294593510223874","tag":"Keyword: Turkey"}]}
2022-07-17 15:41:52 [reactor-http-nio-2] INFO  c.t.a.s.a.i.TwitterApiStreamConnectorImpl - {"data":{"created_at":"2022-07-17T13:41:46.000Z","id":"1548664259047047168","public_metrics":{"retweet_count":0,"reply_count":0,"like_count":0,"quote_count":0},"text":"Flux haftalƒ±k raporu ile (11-17 Temmuz) kar≈üƒ±nƒ±zda..\n\n$Flux: $0.4626 fiyatƒ±yla haftalƒ±k %1.66 deƒüer kazandƒ±.\n\nNode sayƒ±sƒ±: anlƒ±k 12.304 adet.\n\n#kriptopara #Web3 #kripto #Flux https://t.co/xYTIDYykuX"},"matching_rules":[{"id":"1548294593510223874","tag":"Keyword: Turkey"}]}
2022-07-17 15:41:52 [reactor-http-nio-2] INFO  c.t.a.s.a.i.TwitterApiStreamConnectorImpl - {"data":{"created_at":"2022-07-17T13:41:46.000Z","id":"1548664258136793090","public_metrics":{"retweet_count":0,"reply_count":0,"like_count":0,"quote_count":0},"text":"@JimmyRandazzo He‚Äôs 10-2. If I said to you in spring Taillon would be 10-2 with an under 4 ERA by the 1/2, would you take it? Of coarse you would. If you pace him out he will be 20-4. Of coarse it doesn‚Äôt work that way, but if it did, you‚Äôd take it right?"},"matching_rules":[{"id":"1547657797826854917","tag":"Keyword: Spring"}]}
2022-07-17 15:41:53 [reactor-http-nio-2] INFO  c.t.a.s.a.i.TwitterApiStreamConnectorImpl - {"data":{"created_at":"2022-07-17T13:41:48.000Z","id":"1548664266324324352","public_metrics":{"retweet_count":7584,"reply_count":0,"like_count":0,"quote_count":0},"text":"RT @pizzala_jp: Ôºè\nüçªKIIRIN √ó „Éî„Ç∂„Éº„É©üçï\n„Ç≥„É©„Éú„Ç≠„É£„É≥„Éö„Éº„É≥Á¨¨ÔºíÂºæüéâ\nÔºº\n\nSPRING VALLEY BREWERY„ÅäÈ£ü‰∫ãÂà∏4000ÂÜÜÔºàÁ®éËæºÔºâ„Åå35ÂêçÊßò„Å´ÂΩì„Åü„Çã‚ÄºÔ∏è\n\n„ÄêÂøúÂãüÊñπÊ≥ï„Äë\n‚ë†@pizzala_jp „Çí„Éï„Ç©„É≠„Éº \n‚ë°„Åì„ÅÆÊäïÁ®ø„ÇíRT\n‚ë¢http‚Ä¶"},"matching_rules":[{"id":"1547657797826854917","tag":"Keyword: Spring"}]}
2022-07-17 15:41:53 [reactor-http-nio-2] INFO  c.t.a.s.a.i.TwitterApiStreamConnectorImpl - {"data":{"created_at":"2022-07-17T13:41:47.000Z","id":"1548664262746591232","public_metrics":{"retweet_count":59,"reply_count":0,"like_count":0,"quote_count":0},"text":"RT @Lookinupatstars: Ha ha! Raworth is playing back the video clip of Mordaunt‚Äôs Turkey/ EU lie. \n\nMordaunt doubles down belligerently.\n\nRa‚Ä¶"},"matching_rules":[{"id":"1548294593510223874","tag":"Keyword: Turkey"}]}
2022-07-17 15:41:53 [reactor-http-nio-2] INFO  c.t.a.s.a.i.TwitterApiStreamConnectorImpl - {"data":{"created_at":"2022-07-17T13:41:48.000Z","id":"1548664265950871554","public_metrics":{"retweet_count":8755,"reply_count":0,"like_count":0,"quote_count":0},"text":"RT @foreverimbetter: Glad to see people waking up to the fact summer is a horrible ass season. Don‚Äôt nobody wanna be dealing with 100+ weat‚Ä¶"},"matching_rules":[{"id":"1547657797826854917","tag":"Keyword: Spring"}]}
2022-07-17 15:41:53 [reactor-http-nio-2] INFO  c.t.a.s.a.i.TwitterApiStreamConnectorImpl - {"data":{"created_at":"2022-07-17T13:41:47.000Z","id":"1548664263018946563","public_metrics":{"retweet_count":0,"reply_count":0,"like_count":0,"quote_count":0},"text":"@MattGubba Look out for me the moron whose desperately looking for clicks"},"matching_rules":[{"id":"1548294593510223874","tag":"Keyword: Turkey"}]}
2022-07-17 15:41:53 [reactor-http-nio-2] INFO  c.t.a.s.a.i.TwitterApiStreamConnectorImpl - {"data":{"created_at":"2022-07-17T13:41:47.000Z","id":"1548664263287382017","public_metrics":{"retweet_count":0,"reply_count":0,"like_count":0,"quote_count":0},"text":"@vvanwilgenburg Situation for IDPs in Tal Rifaat has been very difficult in term of access to services/places including Aleppo since thier arrival."},"matching_rules":[{"id":"1548294593510223874","tag":"Keyword: Turkey"}]}
2022-07-17 15:41:54 [reactor-http-nio-2] INFO  c.t.a.s.a.i.TwitterApiStreamConnectorImpl - {"data":{"created_at":"2022-07-17T13:41:48.000Z","id":"1548664266676396033","public_metrics":{"retweet_count":955,"reply_count":0,"like_count":0,"quote_count":0},"text":"RT @AmyChrysostomou: Anna Sui spring/summer 1997 https://t.co/uwuWspY0Vq"},"matching_rules":[{"id":"1547657797826854917","tag":"Keyword: Spring"}]}
2022-07-17 15:41:54 [reactor-http-nio-2] INFO  c.t.a.s.a.i.TwitterApiStreamConnectorImpl - {"data":{"created_at":"2022-07-17T13:41:49.000Z","id":"1548664269260087297","public_metrics":{"retweet_count":849,"reply_count":0,"like_count":0,"quote_count":0},"text":"RT @helenlewis: If Penny Mordaunt wins, and shows the same . . . flexibility with the truth in Downing Street that she's shown over gender‚Ä¶"},"matching_rules":[{"id":"1548294593510223874","tag":"Keyword: Turkey"}]}
2022-07-17 15:41:55 [reactor-http-nio-2] INFO  c.t.a.s.a.i.TwitterApiStreamConnectorImpl - {"data":{"created_at":"2022-07-17T13:41:50.000Z","id":"1548664274503061507","public_metrics":{"retweet_count":8755,"reply_count":0,"like_count":0,"quote_count":0},"text":"RT @foreverimbetter: Glad to see people waking up to the fact summer is a horrible ass season. Don‚Äôt nobody wanna be dealing with 100+ weat‚Ä¶"},"matching_rules":[{"id":"1547657797826854917","tag":"Keyword: Spring"}]}
2022-07-17 15:41:56 [reactor-http-nio-2] INFO  c.t.a.s.a.i.TwitterApiStreamConnectorImpl - {"data":{"created_at":"2022-07-17T13:41:50.000Z","id":"1548664275778035712","public_metrics":{"retweet_count":0,"reply_count":0,"like_count":0,"quote_count":0},"text":"@AdamBienkov https://t.co/BWNo23E79h"},"matching_rules":[{"id":"1548294593510223874","tag":"Keyword: Turkey"}]}
2022-07-17 15:41:56 [reactor-http-nio-2] INFO  c.t.a.s.a.i.TwitterApiStreamConnectorImpl - {"data":{"created_at":"2022-07-17T13:41:51.000Z","id":"1548664277111697408","public_metrics":{"retweet_count":0,"reply_count":0,"like_count":0,"quote_count":0},"text":"@ShowwcaseHQ Spring React Redux"},"matching_rules":[{"id":"1547657797826854917","tag":"Keyword: Spring"}]}
2022-07-17 15:41:56 [reactor-http-nio-2] INFO  c.t.a.s.a.i.TwitterApiStreamConnectorImpl - {"data":{"created_at":"2022-07-17T13:41:50.000Z","id":"1548664274825973761","public_metrics":{"retweet_count":0,"reply_count":0,"like_count":0,"quote_count":0},"text":"@herculysee honey wake up new herc vlog"},"matching_rules":[{"id":"1547657797826854917","tag":"Keyword: Spring"}]}
2022-07-17 15:41:57 [reactor-http-nio-2] INFO  c.t.a.s.a.i.TwitterApiStreamConnectorImpl - {"data":{"created_at":"2022-07-17T13:41:52.000Z","id":"1548664281276813315","public_metrics":{"retweet_count":3,"reply_count":0,"like_count":0,"quote_count":0},"text":"RT @TheSciFiBard: A thread of #GentlemanJack Season 2 promo &amp; BTS pics üé©\n\nCan‚Äôt wait until it‚Äôs back on our screens in the Spring! üôå\n\nSourc‚Ä¶"},"matching_rules":[{"id":"1547657797826854917","tag":"Keyword: Spring"}]}
2022-07-17 15:41:57 [reactor-http-nio-2] INFO  c.t.a.s.a.i.TwitterApiStreamConnectorImpl - {"data":{"created_at":"2022-07-17T13:41:51.000Z","id":"1548664280358141952","public_metrics":{"retweet_count":0,"reply_count":0,"like_count":0,"quote_count":0},"text":"i want this https://t.co/CHi4VDt6kk"},"matching_rules":[{"id":"1547657797826854917","tag":"Keyword: Spring"}]}
2022-07-17 15:41:57 [reactor-http-nio-2] INFO  c.t.a.s.a.i.TwitterApiStreamConnectorImpl - {"data":{"created_at":"2022-07-17T13:41:52.000Z","id":"1548664280916013057","public_metrics":{"retweet_count":319,"reply_count":0,"like_count":0,"quote_count":0},"text":"RT @CatherineAdenle: Infographic: A comprehensive guide to learning Data Analytics by Steve Nouri #data #DataScience #numpy #Python #Tablea‚Ä¶"},"matching_rules":[{"id":"1548294593510223875","tag":"Keyword: Java"}]}
2022-07-17 15:41:57 [reactor-http-nio-2] INFO  c.t.a.s.a.i.TwitterApiStreamConnectorImpl - {"data":{"created_at":"2022-07-17T13:41:51.000Z","id":"1548664279813001219","public_metrics":{"retweet_count":1,"reply_count":0,"like_count":0,"quote_count":0},"text":"RT @RenaNetjes: No words about YPG displacing 95% of Tel Rifaat's population in 2016.\nNo words about YPG expelling Arabs from other village‚Ä¶"},"matching_rules":[{"id":"1548294593510223874","tag":"Keyword: Turkey"}]}
2022-07-17 15:41:57 [reactor-http-nio-2] INFO  c.t.a.s.a.i.TwitterApiStreamConnectorImpl - {"data":{"created_at":"2022-07-17T13:41:51.000Z","id":"1548664278982578176","public_metrics":{"retweet_count":0,"reply_count":0,"like_count":0,"quote_count":0},"text":"Brexit man Boris Johnson wants Turkey to join the EU https://t.co/zliqXwoA3p via @YouTube \n\nThen he told voters we could be overrun by Turkish migrants. Dishonest to the core."},"matching_rules":[{"id":"1548294593510223874","tag":"Keyword: Turkey"}]}
2022-07-17 15:41:58 [reactor-http-nio-2] INFO  c.t.a.s.a.i.TwitterApiStreamConnectorImpl - {"data":{"created_at":"2022-07-17T13:41:53.000Z","id":"1548664285794017281","public_metrics":{"retweet_count":1173,"reply_count":0,"like_count":0,"quote_count":0},"text":"RT @AdamBienkov: \"We didn't have a veto\" to stop Turkey from joining the EU, Penny Mordaunt tells the BBC.\n\nWhen pointed out that this is c‚Ä¶"},"matching_rules":[{"id":"1548294593510223874","tag":"Keyword: Turkey"}]}
2022-07-17 15:41:59 [reactor-http-nio-2] ERROR reactor.core.publisher.Operators - Operator called default onErrorDropped
reactor.core.Exceptions$ErrorCallbackNotImplemented: org.springframework.web.reactive.function.client.WebClientResponseException: 200 OK from GET https://api.twitter.com/2/tweets/search/stream?tweet.fields=created_at,public_metrics; nested exception is reactor.netty.http.client.PrematureCloseException: Connection prematurely closed DURING response
Caused by: org.springframework.web.reactive.function.client.WebClientResponseException: 200 OK from GET https://api.twitter.com/2/tweets/search/stream?tweet.fields=created_at,public_metrics; nested exception is reactor.netty.http.client.PrematureCloseException: Connection prematurely closed DURING response
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:229)
	at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:207)
	at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
	at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:2398)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2194)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onSubscribe(FluxOnErrorResume.java:74)
	at reactor.core.publisher.MonoJust.subscribe(MonoJust.java:55)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4397)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
	at reactor.core.publisher.Operators$MonoSubscriber.onError(Operators.java:1863)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onError(FluxOnAssembly.java:544)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onError(FluxMapFuseable.java:142)
	at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onError(FluxContextWrite.java:121)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onError(FluxMapFuseable.java:340)
	at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onError(FluxFilterFuseable.java:382)
	at reactor.core.publisher.MonoCollect$CollectSubscriber.onError(MonoCollect.java:145)
	at reactor.core.publisher.FluxMap$MapSubscriber.onError(FluxMap.java:134)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.onError(FluxPeek.java:222)
	at reactor.core.publisher.FluxMap$MapSubscriber.onError(FluxMap.java:134)
	at reactor.core.publisher.Operators.error(Operators.java:198)
	at reactor.netty.channel.FluxReceive.startReceiver(FluxReceive.java:172)
	at reactor.netty.channel.FluxReceive.subscribe(FluxReceive.java:143)
	at reactor.core.publisher.InternalFluxOperator.subscribe(InternalFluxOperator.java:62)
	at reactor.netty.ByteBufFlux.subscribe(ByteBufFlux.java:340)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4397)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onError(FluxOnAssembly.java:544)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onError(FluxMapFuseable.java:142)
	at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onError(FluxContextWrite.java:121)
	at reactor.core.publisher.FluxPeekFuseable$PeekConditionalSubscriber.onError(FluxPeekFuseable.java:903)
	at reactor.core.publisher.FluxConcatArray$ConcatArraySubscriber.onError(FluxConcatArray.java:207)
	at reactor.core.publisher.FluxFlattenIterable$FlattenIterableSubscriber.drainAsync(FluxFlattenIterable.java:321)
	at reactor.core.publisher.FluxFlattenIterable$FlattenIterableSubscriber.drain(FluxFlattenIterable.java:686)
	at reactor.core.publisher.FluxFlattenIterable$FlattenIterableSubscriber.onError(FluxFlattenIterable.java:257)
	at reactor.core.publisher.FluxMap$MapSubscriber.onError(FluxMap.java:134)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.onError(FluxPeek.java:222)
	at reactor.core.publisher.FluxMap$MapSubscriber.onError(FluxMap.java:134)
	at reactor.netty.channel.FluxReceive.terminateReceiver(FluxReceive.java:465)
	at reactor.netty.channel.FluxReceive.drainReceiver(FluxReceive.java:260)
	at reactor.netty.channel.FluxReceive.onInboundError(FluxReceive.java:453)
	at reactor.netty.channel.ChannelOperations.onInboundError(ChannelOperations.java:488)
	at reactor.netty.http.client.HttpClientOperations.onInboundClose(HttpClientOperations.java:298)
	at reactor.netty.channel.ChannelOperationsHandler.channelInactive(ChannelOperationsHandler.java:73)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:241)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelInactive(ChannelInboundHandlerAdapter.java:81)
	at io.netty.handler.timeout.IdleStateHandler.channelInactive(IdleStateHandler.java:277)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:241)
	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelInactive(CombinedChannelDuplexHandler.java:418)
	at io.netty.handler.codec.ByteToMessageDecoder.channelInputClosed(ByteToMessageDecoder.java:392)
	at io.netty.handler.codec.ByteToMessageDecoder.channelInactive(ByteToMessageDecoder.java:357)
	at io.netty.handler.codec.http.HttpClientCodec$Decoder.channelInactive(HttpClientCodec.java:326)
	at io.netty.channel.CombinedChannelDuplexHandler.channelInactive(CombinedChannelDuplexHandler.java:221)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:241)
	at io.netty.handler.codec.ByteToMessageDecoder.channelInputClosed(ByteToMessageDecoder.java:392)
	at io.netty.handler.codec.ByteToMessageDecoder.channelInactive(ByteToMessageDecoder.java:357)
	at io.netty.handler.ssl.SslHandler.channelInactive(SslHandler.java:1075)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:241)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelInactive(DefaultChannelPipeline.java:1405)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.DefaultChannelPipeline.fireChannelInactive(DefaultChannelPipeline.java:901)
	at io.netty.channel.AbstractChannel$AbstractUnsafe$7.run(AbstractChannel.java:813)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:174)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:167)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasksFrom(SingleThreadEventExecutor.java:426)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:375)
	at io.netty.util.concurrent.SingleThreadEventExecutor.confirmShutdown(SingleThreadEventExecutor.java:763)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:530)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: reactor.netty.http.client.PrematureCloseException: Connection prematurely closed DURING response
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ‚á¢ Body from GET https://api.twitter.com/2/tweets/search/stream?tweet.fields=created_at,public_metrics [DefaultClientResponse]
	*__checkpoint ‚á¢ Body from GET https://api.twitter.com/2/tweets/search/stream?tweet.fields=created_at,public_metrics [DefaultClientResponse]
Original Stack Trace:
2022-07-17 15:42:07 [main] INFO  com.twitter.app.TwitterToKafkaApp - Starting TwitterToKafkaApp using Java 17.0.3.0.1 on Berkers-MBP.fritz.box with PID 6385 (/Users/berkerigdir/twitter-app/app/twitter-to-kafka/target/classes started by berkerigdir in /Users/berkerigdir/twitter-app/app)
2022-07-17 15:42:07 [main] INFO  com.twitter.app.TwitterToKafkaApp - No active profile set, falling back to 1 default profile: "default"
2022-07-17 15:42:08 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2022-07-17 15:42:08 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2022-07-17 15:42:08 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2022-07-17 15:42:08 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.64]
2022-07-17 15:42:08 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2022-07-17 15:42:08 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 816 ms
2022-07-17 15:42:09 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2022-07-17 15:42:09 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2022-07-17 15:42:09 [main] INFO  com.twitter.app.TwitterToKafkaApp - Started TwitterToKafkaApp in 1.728 seconds (JVM running for 2.546)
2022-07-17 15:42:09 [main] INFO  com.twitter.app.TwitterToKafkaApp - The application starts up...
2022-07-17 15:42:09 [main] INFO  com.twitter.app.TwitterToKafkaApp - org.springframework.retry.support.RetryTemplate@5232e3f1
2022-07-17 15:42:09 [main] INFO  c.t.a.s.a.i.TwitterApiStreamConnectorImpl - {
	"delete": {
		"values": ["Java,Spring Boot,Berker,Turkey"]
	}
}
2022-07-17 15:42:10 [main] INFO  c.t.a.s.a.i.TwitterApiStreamConnectorImpl - {"meta":{"sent":"2022-07-17T13:42:10.501Z","summary":{"deleted":0,"not_deleted":1}},"errors":[{"errors":[{"parameters":{},"message":"Rule does not exist"}],"title":"Invalid Request","detail":"One or more parameters to your request was invalid.","type":"https://api.twitter.com/2/problems/invalid-request"}]}
2022-07-17 15:42:10 [main] INFO  c.t.a.s.a.i.TwitterApiStreamConnectorImpl - {"add" : [{
    "value": "Java",
    "tag": "Keyword: Java"
},{
    "value": "Spring Boot",
    "tag": "Keyword: Spring Boot"
},{
    "value": "Berker",
    "tag": "Keyword: Berker"
},{
    "value": "Turkey",
    "tag": "Keyword: Turkey"
}]}

2022-07-17 15:42:10 [main] INFO  c.t.a.s.a.i.TwitterApiStreamConnectorImpl - {"meta":{"sent":"2022-07-17T13:42:10.894Z","summary":{"created":0,"not_created":4,"valid":0,"invalid":4}},"errors":[{"value":"Java","id":"1548294593510223875","title":"DuplicateRule","type":"https://api.twitter.com/2/problems/duplicate-rules"},{"value":"Turkey","id":"1548294593510223874","title":"DuplicateRule","type":"https://api.twitter.com/2/problems/duplicate-rules"},{"value":"Spring Boot","id":"1548294593510223872","title":"DuplicateRule","type":"https://api.twitter.com/2/problems/duplicate-rules"},{"value":"Berker","id":"1548294593510223873","title":"DuplicateRule","type":"https://api.twitter.com/2/problems/duplicate-rules"}]}
2022-07-17 15:42:14 [reactor-http-nio-2] INFO  c.t.a.s.a.i.TwitterApiStreamConnectorImpl - {"data":{"created_at":"2022-07-17T13:42:09.000Z","id":"1548664352420646913","public_metrics":{"retweet_count":3,"reply_count":0,"like_count":0,"quote_count":0},"text":"RT @bayccollectors1: Operator Sawtooth Wave Animation\n\n#javaprogramming #learnprogramming #100daysofcode #codingdays  #programmingisfun #ja‚Ä¶"},"matching_rules":[{"id":"1548294593510223875","tag":"Keyword: Java"}]}
2022-07-17 15:42:14 [reactor-http-nio-2] INFO  c.t.a.s.a.i.TwitterApiStreamConnectorImpl - {"data":{"created_at":"2022-07-17T13:42:09.000Z","id":"1548664353464926214","public_metrics":{"retweet_count":259,"reply_count":0,"like_count":0,"quote_count":0},"text":"RT @thehuwedwards: Brilliantly done by @sophieraworth here. Fact - the UK *did* have a veto. Fact - what Cameron did or didn't promise priv‚Ä¶"},"matching_rules":[{"id":"1548294593510223874","tag":"Keyword: Turkey"}]}
2022-07-17 15:42:14 [reactor-http-nio-2] INFO  c.t.a.s.a.i.TwitterApiStreamConnectorImpl - {"data":{"created_at":"2022-07-17T13:42:09.000Z","id":"1548664354287001600","public_metrics":{"retweet_count":0,"reply_count":0,"like_count":0,"quote_count":0},"text":"@BBCPolitics This was the only difficult question Mordaunt faced in this interview, and she responded with more lies!"},"matching_rules":[{"id":"1548294593510223874","tag":"Keyword: Turkey"}]}
2022-07-17 15:42:15 [reactor-http-nio-2] INFO  c.t.a.s.a.i.TwitterApiStreamConnectorImpl - {"data":{"created_at":"2022-07-17T13:42:10.000Z","id":"1548664357042528256","public_metrics":{"retweet_count":61,"reply_count":0,"like_count":0,"quote_count":0},"text":"RT @strngerpolaroid: lucas takes a polaroid of max in the rain\nspring 1986 https://t.co/K8vB9oRt1K"},"matching_rules":[{"id":"1547657797826854917","tag":"Keyword: Spring"}]}
2022-07-17 15:42:17 [reactor-http-nio-2] INFO  c.t.a.s.a.i.TwitterApiStreamConnectorImpl - {"data":{"created_at":"2022-07-17T13:42:11.000Z","id":"1548664364705714177","public_metrics":{"retweet_count":528,"reply_count":0,"like_count":0,"quote_count":0},"text":"RT @saintdemie: versus by versace, spring-summer 1995 https://t.co/1GRGrp6ZLA"},"matching_rules":[{"id":"1547657797826854917","tag":"Keyword: Spring"}]}
2022-07-17 15:42:18 [reactor-http-nio-2] INFO  c.t.a.s.a.i.TwitterApiStreamConnectorImpl - {"data":{"created_at":"2022-07-17T13:42:12.000Z","id":"1548664368128315392","public_metrics":{"retweet_count":515,"reply_count":0,"like_count":0,"quote_count":0},"text":"RT @adampayne26: Penny Mordaunt says the UK \"could never have used\" a veto to stop Turkey joining the EU. Sophie Raworth - correctly - says‚Ä¶"},"matching_rules":[{"id":"1548294593510223874","tag":"Keyword: Turkey"}]}
2022-07-17 15:42:18 [reactor-http-nio-2] ERROR reactor.core.publisher.Operators - Operator called default onErrorDropped
reactor.core.Exceptions$ErrorCallbackNotImplemented: org.springframework.web.reactive.function.client.WebClientResponseException: 200 OK from GET https://api.twitter.com/2/tweets/search/stream?tweet.fields=created_at,public_metrics; nested exception is reactor.netty.http.client.PrematureCloseException: Connection prematurely closed DURING response
Caused by: org.springframework.web.reactive.function.client.WebClientResponseException: 200 OK from GET https://api.twitter.com/2/tweets/search/stream?tweet.fields=created_at,public_metrics; nested exception is reactor.netty.http.client.PrematureCloseException: Connection prematurely closed DURING response
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:229)
	at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:207)
	at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
	at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:2398)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2194)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onSubscribe(FluxOnErrorResume.java:74)
	at reactor.core.publisher.MonoJust.subscribe(MonoJust.java:55)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4397)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
	at reactor.core.publisher.Operators$MonoSubscriber.onError(Operators.java:1863)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onError(FluxOnAssembly.java:544)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onError(FluxMapFuseable.java:142)
	at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onError(FluxContextWrite.java:121)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onError(FluxMapFuseable.java:340)
	at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onError(FluxFilterFuseable.java:382)
	at reactor.core.publisher.MonoCollect$CollectSubscriber.onError(MonoCollect.java:145)
	at reactor.core.publisher.FluxMap$MapSubscriber.onError(FluxMap.java:134)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.onError(FluxPeek.java:222)
	at reactor.core.publisher.FluxMap$MapSubscriber.onError(FluxMap.java:134)
	at reactor.core.publisher.Operators.error(Operators.java:198)
	at reactor.netty.channel.FluxReceive.startReceiver(FluxReceive.java:172)
	at reactor.netty.channel.FluxReceive.subscribe(FluxReceive.java:143)
	at reactor.core.publisher.InternalFluxOperator.subscribe(InternalFluxOperator.java:62)
	at reactor.netty.ByteBufFlux.subscribe(ByteBufFlux.java:340)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4397)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onError(FluxOnAssembly.java:544)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onError(FluxMapFuseable.java:142)
	at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onError(FluxContextWrite.java:121)
	at reactor.core.publisher.FluxPeekFuseable$PeekConditionalSubscriber.onError(FluxPeekFuseable.java:903)
	at reactor.core.publisher.FluxConcatArray$ConcatArraySubscriber.onError(FluxConcatArray.java:207)
	at reactor.core.publisher.FluxFlattenIterable$FlattenIterableSubscriber.drainAsync(FluxFlattenIterable.java:321)
	at reactor.core.publisher.FluxFlattenIterable$FlattenIterableSubscriber.drain(FluxFlattenIterable.java:686)
	at reactor.core.publisher.FluxFlattenIterable$FlattenIterableSubscriber.onError(FluxFlattenIterable.java:257)
	at reactor.core.publisher.FluxMap$MapSubscriber.onError(FluxMap.java:134)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.onError(FluxPeek.java:222)
	at reactor.core.publisher.FluxMap$MapSubscriber.onError(FluxMap.java:134)
	at reactor.netty.channel.FluxReceive.terminateReceiver(FluxReceive.java:465)
	at reactor.netty.channel.FluxReceive.drainReceiver(FluxReceive.java:260)
	at reactor.netty.channel.FluxReceive.onInboundError(FluxReceive.java:453)
	at reactor.netty.channel.ChannelOperations.onInboundError(ChannelOperations.java:488)
	at reactor.netty.http.client.HttpClientOperations.onInboundClose(HttpClientOperations.java:298)
	at reactor.netty.channel.ChannelOperationsHandler.channelInactive(ChannelOperationsHandler.java:73)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:241)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelInactive(ChannelInboundHandlerAdapter.java:81)
	at io.netty.handler.timeout.IdleStateHandler.channelInactive(IdleStateHandler.java:277)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:241)
	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelInactive(CombinedChannelDuplexHandler.java:418)
	at io.netty.handler.codec.ByteToMessageDecoder.channelInputClosed(ByteToMessageDecoder.java:392)
	at io.netty.handler.codec.ByteToMessageDecoder.channelInactive(ByteToMessageDecoder.java:357)
	at io.netty.handler.codec.http.HttpClientCodec$Decoder.channelInactive(HttpClientCodec.java:326)
	at io.netty.channel.CombinedChannelDuplexHandler.channelInactive(CombinedChannelDuplexHandler.java:221)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:241)
	at io.netty.handler.codec.ByteToMessageDecoder.channelInputClosed(ByteToMessageDecoder.java:392)
	at io.netty.handler.codec.ByteToMessageDecoder.channelInactive(ByteToMessageDecoder.java:357)
	at io.netty.handler.ssl.SslHandler.channelInactive(SslHandler.java:1075)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:241)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelInactive(DefaultChannelPipeline.java:1405)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.DefaultChannelPipeline.fireChannelInactive(DefaultChannelPipeline.java:901)
	at io.netty.channel.AbstractChannel$AbstractUnsafe$7.run(AbstractChannel.java:813)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask$$$capture(AbstractEventExecutor.java:174)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute$$$capture(AbstractEventExecutor.java:167)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasksFrom(SingleThreadEventExecutor.java:426)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:375)
	at io.netty.util.concurrent.SingleThreadEventExecutor.confirmShutdown(SingleThreadEventExecutor.java:763)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:530)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: reactor.netty.http.client.PrematureCloseException: Connection prematurely closed DURING response
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ‚á¢ Body from GET https://api.twitter.com/2/tweets/search/stream?tweet.fields=created_at,public_metrics [DefaultClientResponse]
	*__checkpoint ‚á¢ Body from GET https://api.twitter.com/2/tweets/search/stream?tweet.fields=created_at,public_metrics [DefaultClientResponse]
Original Stack Trace:
2022-07-17 15:42:25 [main] INFO  com.twitter.app.TwitterToKafkaApp - Starting TwitterToKafkaApp using Java 17.0.3.0.1 on Berkers-MBP.fritz.box with PID 6389 (/Users/berkerigdir/twitter-app/app/twitter-to-kafka/target/classes started by berkerigdir in /Users/berkerigdir/twitter-app/app)
2022-07-17 15:42:25 [main] INFO  com.twitter.app.TwitterToKafkaApp - No active profile set, falling back to 1 default profile: "default"
2022-07-17 15:42:26 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2022-07-17 15:42:26 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2022-07-17 15:42:26 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2022-07-17 15:42:26 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.64]
2022-07-17 15:42:26 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2022-07-17 15:42:26 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 722 ms
2022-07-17 15:42:26 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2022-07-17 15:42:26 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2022-07-17 15:42:26 [main] INFO  com.twitter.app.TwitterToKafkaApp - Started TwitterToKafkaApp in 1.58 seconds (JVM running for 2.339)
2022-07-17 15:42:26 [main] INFO  com.twitter.app.TwitterToKafkaApp - The application starts up...
2022-07-17 15:42:26 [main] INFO  com.twitter.app.TwitterToKafkaApp - org.springframework.retry.support.RetryTemplate@7c90b7b7
2022-07-17 15:42:26 [main] INFO  c.t.a.s.a.i.TwitterApiStreamConnectorImpl - {
	"delete": {
		"values": ["Java,Spring Boot,Berker,Turkey"]
	}
}
2022-07-17 15:42:27 [main] INFO  c.t.a.s.a.i.TwitterApiStreamConnectorImpl - {"meta":{"sent":"2022-07-17T13:42:27.868Z","summary":{"deleted":0,"not_deleted":1}},"errors":[{"errors":[{"parameters":{},"message":"Rule does not exist"}],"title":"Invalid Request","detail":"One or more parameters to your request was invalid.","type":"https://api.twitter.com/2/problems/invalid-request"}]}
2022-07-17 15:42:27 [main] INFO  c.t.a.s.a.i.TwitterApiStreamConnectorImpl - {"add" : [{
    "value": "Java",
    "tag": "Keyword: Java"
},{
    "value": "Spring Boot",
    "tag": "Keyword: Spring Boot"
},{
    "value": "Berker",
    "tag": "Keyword: Berker"
},{
    "value": "Turkey",
    "tag": "Keyword: Turkey"
}]}

2022-07-17 15:42:28 [main] INFO  c.t.a.s.a.i.TwitterApiStreamConnectorImpl - {"meta":{"sent":"2022-07-17T13:42:28.330Z","summary":{"created":0,"not_created":4,"valid":0,"invalid":4}},"errors":[{"value":"Java","id":"1548294593510223875","title":"DuplicateRule","type":"https://api.twitter.com/2/problems/duplicate-rules"},{"value":"Turkey","id":"1548294593510223874","title":"DuplicateRule","type":"https://api.twitter.com/2/problems/duplicate-rules"},{"value":"Spring Boot","id":"1548294593510223872","title":"DuplicateRule","type":"https://api.twitter.com/2/problems/duplicate-rules"},{"value":"Berker","id":"1548294593510223873","title":"DuplicateRule","type":"https://api.twitter.com/2/problems/duplicate-rules"}]}
2022-07-17 15:42:32 [reactor-http-nio-2] INFO  c.t.a.s.a.i.TwitterApiStreamConnectorImpl - {"data":{"created_at":"2022-07-17T13:42:26.000Z","id":"1548664423899926531","public_metrics":{"retweet_count":0,"reply_count":0,"like_count":0,"quote_count":0},"text":"Big Congrats to our 16U/10th Grade Team &amp; Coach Carson Niehoff on placing 3rd Place in the @aaubasketball 2022 D2 National Championship at the @espn Wide World of Sports in Orlando, FL! This team has had a very impressive Spring/Summer season with a national record of 31-3. https://t.co/rGuEymvEZV"},"matching_rules":[{"id":"1547657797826854917","tag":"Keyword: Spring"}]}
2022-07-17 15:42:32 [reactor-http-nio-2] INFO  c.t.a.s.a.i.TwitterApiStreamConnectorImpl - {"data":{"created_at":"2022-07-17T13:42:26.000Z","id":"1548664425472991232","public_metrics":{"retweet_count":12,"reply_count":0,"like_count":0,"quote_count":0},"text":"RT @intochive: according to jungwon\n\n- jay's favorite item is belt\n- jay's special talent is bending his fingers \n- jay's favorite place is‚Ä¶"},"matching_rules":[{"id":"1547657797826854917","tag":"Keyword: Spring"}]}
2022-07-17 15:42:33 [reactor-http-nio-2] INFO  c.t.a.s.a.i.TwitterApiStreamConnectorImpl - {"data":{"created_at":"2022-07-17T13:42:27.000Z","id":"1548664430598037504","public_metrics":{"retweet_count":2,"reply_count":0,"like_count":0,"quote_count":0},"text":"RT @Gerjon_: üá∑üá∫RA-86572/#RFF7705, a Russian Air Force223rd Flight Unit State Airline flight from üá∑üá∫Moscow to üá∏üáæLatakia/üá∑üá∫Khmeimim (estimate‚Ä¶"},"matching_rules":[{"id":"1548294593510223874","tag":"Keyword: Turkey"}]}
2022-07-17 15:42:33 [reactor-http-nio-2] INFO  c.t.a.s.a.i.TwitterApiStreamConnectorImpl - {"data":{"created_at":"2022-07-17T13:42:27.000Z","id":"1548664430711476226","public_metrics":{"retweet_count":1174,"reply_count":0,"like_count":0,"quote_count":0},"text":"RT @AdamBienkov: \"We didn't have a veto\" to stop Turkey from joining the EU, Penny Mordaunt tells the BBC.\n\nWhen pointed out that this is c‚Ä¶"},"matching_rules":[{"id":"1548294593510223874","tag":"Keyword: Turkey"}]}
2022-07-17 15:42:34 [reactor-http-nio-2] INFO  c.t.a.s.a.i.TwitterApiStreamConnectorImpl - {"data":{"created_at":"2022-07-17T13:42:29.000Z","id":"1548664436596015104","public_metrics":{"retweet_count":39,"reply_count":0,"like_count":0,"quote_count":0},"text":"RT @charIuvbot: ‚Äúi kin charlie spring‚Äù babe have you kinsidered therapy"},"matching_rules":[{"id":"1547657797826854917","tag":"Keyword: Spring"}]}
2022-07-17 15:42:34 [reactor-http-nio-2] INFO  c.t.a.s.a.i.TwitterApiStreamConnectorImpl - {"data":{"created_at":"2022-07-17T13:42:29.000Z","id":"1548664437451952128","public_metrics":{"retweet_count":0,"reply_count":0,"like_count":0,"quote_count":0},"text":"@ericsohngf_ spring breeze cani"},"matching_rules":[{"id":"1547657797826854917","tag":"Keyword: Spring"}]}
2022-07-17 15:42:34 [reactor-http-nio-2] INFO  c.t.a.s.a.i.TwitterApiStreamConnectorImpl - {"data":{"created_at":"2022-07-17T13:42:28.000Z","id":"1548664434452733954","public_metrics":{"retweet_count":426,"reply_count":0,"like_count":0,"quote_count":0},"text":"RT @Femi_Sorry: Penny Mordaunt STILL lying about Turkey.\n\nIt was literally international law that we could have vetoed Turkey joining the E‚Ä¶"},"matching_rules":[{"id":"1548294593510223874","tag":"Keyword: Turkey"}]}
2022-07-17 15:42:34 [reactor-http-nio-2] INFO  c.t.a.s.a.i.TwitterApiStreamConnectorImpl - {"data":{"created_at":"2022-07-17T13:42:28.000Z","id":"1548664435404857346","public_metrics":{"retweet_count":0,"reply_count":0,"like_count":0,"quote_count":0},"text":"@Independent So it's worse than I thought. She's an ignorant idiot, then. (from EU)"},"matching_rules":[{"id":"1548294593510223874","tag":"Keyword: Turkey"}]}
2022-07-17 15:42:34 [reactor-http-nio-2] ERROR reactor.core.publisher.Operators - Operator called default onErrorDropped
reactor.core.Exceptions$ErrorCallbackNotImplemented: org.springframework.web.reactive.function.client.WebClientResponseException: 200 OK from GET https://api.twitter.com/2/tweets/search/stream?tweet.fields=created_at,public_metrics; nested exception is reactor.netty.http.client.PrematureCloseException: Connection prematurely closed DURING response
Caused by: org.springframework.web.reactive.function.client.WebClientResponseException: 200 OK from GET https://api.twitter.com/2/tweets/search/stream?tweet.fields=created_at,public_metrics; nested exception is reactor.netty.http.client.PrematureCloseException: Connection prematurely closed DURING response
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:229)
	at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:207)
	at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
	at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:2398)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2194)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onSubscribe(FluxOnErrorResume.java:74)
	at reactor.core.publisher.MonoJust.subscribe(MonoJust.java:55)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4397)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
	at reactor.core.publisher.Operators$MonoSubscriber.onError(Operators.java:1863)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onError(FluxOnAssembly.java:544)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onError(FluxMapFuseable.java:142)
	at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onError(FluxContextWrite.java:121)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onError(FluxMapFuseable.java:340)
	at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onError(FluxFilterFuseable.java:382)
	at reactor.core.publisher.MonoCollect$CollectSubscriber.onError(MonoCollect.java:145)
	at reactor.core.publisher.FluxMap$MapSubscriber.onError(FluxMap.java:134)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.onError(FluxPeek.java:222)
	at reactor.core.publisher.FluxMap$MapSubscriber.onError(FluxMap.java:134)
	at reactor.core.publisher.Operators.error(Operators.java:198)
	at reactor.netty.channel.FluxReceive.startReceiver(FluxReceive.java:172)
	at reactor.netty.channel.FluxReceive.subscribe(FluxReceive.java:143)
	at reactor.core.publisher.InternalFluxOperator.subscribe(InternalFluxOperator.java:62)
	at reactor.netty.ByteBufFlux.subscribe(ByteBufFlux.java:340)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4397)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onError(FluxOnAssembly.java:544)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onError(FluxMapFuseable.java:142)
	at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onError(FluxContextWrite.java:121)
	at reactor.core.publisher.FluxPeekFuseable$PeekConditionalSubscriber.onError(FluxPeekFuseable.java:903)
	at reactor.core.publisher.FluxConcatArray$ConcatArraySubscriber.onError(FluxConcatArray.java:207)
	at reactor.core.publisher.FluxFlattenIterable$FlattenIterableSubscriber.drainAsync(FluxFlattenIterable.java:321)
	at reactor.core.publisher.FluxFlattenIterable$FlattenIterableSubscriber.drain(FluxFlattenIterable.java:686)
	at reactor.core.publisher.FluxFlattenIterable$FlattenIterableSubscriber.onError(FluxFlattenIterable.java:257)
	at reactor.core.publisher.FluxMap$MapSubscriber.onError(FluxMap.java:134)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.onError(FluxPeek.java:222)
	at reactor.core.publisher.FluxMap$MapSubscriber.onError(FluxMap.java:134)
	at reactor.netty.channel.FluxReceive.terminateReceiver(FluxReceive.java:465)
	at reactor.netty.channel.FluxReceive.drainReceiver(FluxReceive.java:260)
	at reactor.netty.channel.FluxReceive.onInboundError(FluxReceive.java:453)
	at reactor.netty.channel.ChannelOperations.onInboundError(ChannelOperations.java:488)
	at reactor.netty.http.client.HttpClientOperations.onInboundClose(HttpClientOperations.java:298)
	at reactor.netty.channel.ChannelOperationsHandler.channelInactive(ChannelOperationsHandler.java:73)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:241)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelInactive(ChannelInboundHandlerAdapter.java:81)
	at io.netty.handler.timeout.IdleStateHandler.channelInactive(IdleStateHandler.java:277)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:241)
	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelInactive(CombinedChannelDuplexHandler.java:418)
	at io.netty.handler.codec.ByteToMessageDecoder.channelInputClosed(ByteToMessageDecoder.java:392)
	at io.netty.handler.codec.ByteToMessageDecoder.channelInactive(ByteToMessageDecoder.java:357)
	at io.netty.handler.codec.http.HttpClientCodec$Decoder.channelInactive(HttpClientCodec.java:326)
	at io.netty.channel.CombinedChannelDuplexHandler.channelInactive(CombinedChannelDuplexHandler.java:221)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:241)
	at io.netty.handler.codec.ByteToMessageDecoder.channelInputClosed(ByteToMessageDecoder.java:392)
	at io.netty.handler.codec.ByteToMessageDecoder.channelInactive(ByteToMessageDecoder.java:357)
	at io.netty.handler.ssl.SslHandler.channelInactive(SslHandler.java:1075)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:241)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelInactive(DefaultChannelPipeline.java:1405)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.DefaultChannelPipeline.fireChannelInactive(DefaultChannelPipeline.java:901)
	at io.netty.channel.AbstractChannel$AbstractUnsafe$7.run(AbstractChannel.java:813)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask$$$capture(AbstractEventExecutor.java:174)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute$$$capture(AbstractEventExecutor.java:167)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasksFrom(SingleThreadEventExecutor.java:426)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:375)
	at io.netty.util.concurrent.SingleThreadEventExecutor.confirmShutdown(SingleThreadEventExecutor.java:763)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:530)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: reactor.netty.http.client.PrematureCloseException: Connection prematurely closed DURING response
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ‚á¢ Body from GET https://api.twitter.com/2/tweets/search/stream?tweet.fields=created_at,public_metrics [DefaultClientResponse]
	*__checkpoint ‚á¢ Body from GET https://api.twitter.com/2/tweets/search/stream?tweet.fields=created_at,public_metrics [DefaultClientResponse]
Original Stack Trace:
2022-07-17 15:42:41 [main] INFO  com.twitter.app.TwitterToKafkaApp - Starting TwitterToKafkaApp using Java 17.0.3.0.1 on Berkers-MBP.fritz.box with PID 6392 (/Users/berkerigdir/twitter-app/app/twitter-to-kafka/target/classes started by berkerigdir in /Users/berkerigdir/twitter-app/app)
2022-07-17 15:42:41 [main] INFO  com.twitter.app.TwitterToKafkaApp - No active profile set, falling back to 1 default profile: "default"
2022-07-17 15:42:42 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2022-07-17 15:42:42 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2022-07-17 15:42:42 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2022-07-17 15:42:42 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.64]
2022-07-17 15:42:42 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2022-07-17 15:42:42 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 853 ms
2022-07-17 15:43:04 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2022-07-17 15:43:04 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2022-07-17 15:43:04 [main] INFO  com.twitter.app.TwitterToKafkaApp - Started TwitterToKafkaApp in 23.594 seconds (JVM running for 24.507)
2022-07-17 15:43:04 [main] INFO  com.twitter.app.TwitterToKafkaApp - The application starts up...
2022-07-17 15:43:04 [main] INFO  com.twitter.app.TwitterToKafkaApp - org.springframework.retry.support.RetryTemplate@552cede7
2022-07-17 15:43:04 [main] INFO  c.t.a.s.a.i.TwitterApiStreamConnectorImpl - {
	"delete": {
		"values": ["Java,Spring Boot,Berker,Turkey"]
	}
}
2022-07-17 15:43:05 [main] INFO  c.t.a.s.a.i.TwitterApiStreamConnectorImpl - {"meta":{"sent":"2022-07-17T13:43:05.905Z","summary":{"deleted":0,"not_deleted":1}},"errors":[{"errors":[{"parameters":{},"message":"Rule does not exist"}],"title":"Invalid Request","detail":"One or more parameters to your request was invalid.","type":"https://api.twitter.com/2/problems/invalid-request"}]}
2022-07-17 15:43:05 [main] INFO  c.t.a.s.a.i.TwitterApiStreamConnectorImpl - {"add" : [{
    "value": "Java",
    "tag": "Keyword: Java"
},{
    "value": "Spring Boot",
    "tag": "Keyword: Spring Boot"
},{
    "value": "Berker",
    "tag": "Keyword: Berker"
},{
    "value": "Turkey",
    "tag": "Keyword: Turkey"
}]}

2022-07-17 15:43:06 [main] INFO  c.t.a.s.a.i.TwitterApiStreamConnectorImpl - {"meta":{"sent":"2022-07-17T13:43:06.319Z","summary":{"created":0,"not_created":4,"valid":0,"invalid":4}},"errors":[{"value":"Java","id":"1548294593510223875","title":"DuplicateRule","type":"https://api.twitter.com/2/problems/duplicate-rules"},{"value":"Turkey","id":"1548294593510223874","title":"DuplicateRule","type":"https://api.twitter.com/2/problems/duplicate-rules"},{"value":"Spring Boot","id":"1548294593510223872","title":"DuplicateRule","type":"https://api.twitter.com/2/problems/duplicate-rules"},{"value":"Berker","id":"1548294593510223873","title":"DuplicateRule","type":"https://api.twitter.com/2/problems/duplicate-rules"}]}
2022-07-17 15:43:07 [reactor-http-nio-2] ERROR reactor.core.publisher.Operators - Operator called default onErrorDropped
reactor.core.Exceptions$ErrorCallbackNotImplemented: org.springframework.web.reactive.function.client.WebClientResponseException: 200 OK from GET https://api.twitter.com/2/tweets/search/stream?tweet.fields=created_at,public_metrics; nested exception is reactor.netty.http.client.PrematureCloseException: Connection prematurely closed DURING response
Caused by: org.springframework.web.reactive.function.client.WebClientResponseException: 200 OK from GET https://api.twitter.com/2/tweets/search/stream?tweet.fields=created_at,public_metrics; nested exception is reactor.netty.http.client.PrematureCloseException: Connection prematurely closed DURING response
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:229)
	at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:207)
	at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
	at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:2398)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2194)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onSubscribe(FluxOnErrorResume.java:74)
	at reactor.core.publisher.MonoJust.subscribe(MonoJust.java:55)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4397)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
	at reactor.core.publisher.Operators$MonoSubscriber.onError(Operators.java:1863)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onError(FluxOnAssembly.java:544)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onError(FluxMapFuseable.java:142)
	at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onError(FluxContextWrite.java:121)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onError(FluxMapFuseable.java:340)
	at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onError(FluxFilterFuseable.java:382)
	at reactor.core.publisher.MonoCollect$CollectSubscriber.onError(MonoCollect.java:145)
	at reactor.core.publisher.FluxMap$MapSubscriber.onError(FluxMap.java:134)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.onError(FluxPeek.java:222)
	at reactor.core.publisher.FluxMap$MapSubscriber.onError(FluxMap.java:134)
	at reactor.core.publisher.Operators.error(Operators.java:198)
	at reactor.netty.channel.FluxReceive.startReceiver(FluxReceive.java:172)
	at reactor.netty.channel.FluxReceive.subscribe(FluxReceive.java:143)
	at reactor.core.publisher.InternalFluxOperator.subscribe(InternalFluxOperator.java:62)
	at reactor.netty.ByteBufFlux.subscribe(ByteBufFlux.java:340)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4397)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onError(FluxOnAssembly.java:544)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onError(FluxMapFuseable.java:142)
	at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onError(FluxContextWrite.java:121)
	at reactor.core.publisher.FluxPeekFuseable$PeekConditionalSubscriber.onError(FluxPeekFuseable.java:903)
	at reactor.core.publisher.FluxConcatArray$ConcatArraySubscriber.onError(FluxConcatArray.java:207)
	at reactor.core.publisher.FluxFlattenIterable$FlattenIterableSubscriber.drainAsync(FluxFlattenIterable.java:321)
	at reactor.core.publisher.FluxFlattenIterable$FlattenIterableSubscriber.drain(FluxFlattenIterable.java:686)
	at reactor.core.publisher.FluxFlattenIterable$FlattenIterableSubscriber.onError(FluxFlattenIterable.java:257)
	at reactor.core.publisher.FluxMap$MapSubscriber.onError(FluxMap.java:134)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.onError(FluxPeek.java:222)
	at reactor.core.publisher.FluxMap$MapSubscriber.onError(FluxMap.java:134)
	at reactor.netty.channel.FluxReceive.terminateReceiver(FluxReceive.java:465)
	at reactor.netty.channel.FluxReceive.drainReceiver(FluxReceive.java:260)
	at reactor.netty.channel.FluxReceive.onInboundError(FluxReceive.java:453)
	at reactor.netty.channel.ChannelOperations.onInboundError(ChannelOperations.java:488)
	at reactor.netty.http.client.HttpClientOperations.onInboundClose(HttpClientOperations.java:298)
	at reactor.netty.channel.ChannelOperationsHandler.channelInactive(ChannelOperationsHandler.java:73)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:241)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelInactive(ChannelInboundHandlerAdapter.java:81)
	at io.netty.handler.timeout.IdleStateHandler.channelInactive(IdleStateHandler.java:277)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:241)
	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelInactive(CombinedChannelDuplexHandler.java:418)
	at io.netty.handler.codec.ByteToMessageDecoder.channelInputClosed(ByteToMessageDecoder.java:392)
	at io.netty.handler.codec.ByteToMessageDecoder.channelInactive(ByteToMessageDecoder.java:357)
	at io.netty.handler.codec.http.HttpClientCodec$Decoder.channelInactive(HttpClientCodec.java:326)
	at io.netty.channel.CombinedChannelDuplexHandler.channelInactive(CombinedChannelDuplexHandler.java:221)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:241)
	at io.netty.handler.codec.ByteToMessageDecoder.channelInputClosed(ByteToMessageDecoder.java:392)
	at io.netty.handler.codec.ByteToMessageDecoder.channelInactive(ByteToMessageDecoder.java:357)
	at io.netty.handler.ssl.SslHandler.channelInactive(SslHandler.java:1075)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:241)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelInactive(DefaultChannelPipeline.java:1405)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.DefaultChannelPipeline.fireChannelInactive(DefaultChannelPipeline.java:901)
	at io.netty.channel.AbstractChannel$AbstractUnsafe$7.run(AbstractChannel.java:813)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask$$$capture(AbstractEventExecutor.java:174)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute$$$capture(AbstractEventExecutor.java:167)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasksFrom(SingleThreadEventExecutor.java:426)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:375)
	at io.netty.util.concurrent.SingleThreadEventExecutor.confirmShutdown(SingleThreadEventExecutor.java:763)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:530)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: reactor.netty.http.client.PrematureCloseException: Connection prematurely closed DURING response
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ‚á¢ Body from GET https://api.twitter.com/2/tweets/search/stream?tweet.fields=created_at,public_metrics [DefaultClientResponse]
	*__checkpoint ‚á¢ Body from GET https://api.twitter.com/2/tweets/search/stream?tweet.fields=created_at,public_metrics [DefaultClientResponse]
Original Stack Trace:
