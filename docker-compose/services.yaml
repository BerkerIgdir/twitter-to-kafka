version: '3.7'
services:
  twitter-to-kafka-service:
    image: ${GROUP_ID}/app:${SERVICE_VERSION:-latest}
    ports:
      - "5005:5005"
    volumes:
      - "./docker-logs:/workspace/kafka-to-elastic-service/logs"
      - "./check-elastic-cluster-up.sh:/usr/local/bin/check-elastic-cluster-up.sh"
    user: root
    depends_on:
      - kafka-broker-1
      - kafka-broker-2
      - kafka-broker-3
    environment:
      - "JAVA_OPTS=-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5005 -Xms128m -Xmx256m"
      - "LOGGING_LEVEL_COM_MICROSERVICES_DEMO=info"
      - "LOGGING_LEVEL_ROOT=info"
      - "KAFKA-CONFIG_TOPIC-NAME=twitter-topic"
      - "KAFKA-CONFIG_BOOTSTRAP-SERVERS=kafka-broker-1:9092, kafka-broker-2:9092, kafka-broker-3:9092"
      - "KAFKA-CONFIG_SCHEMA-REGISTRY-URL=http://schema-registry:8081"
    networks:
      - ${GLOBAL_NETWORK:-services}
  kafka-to-elastic-service:
    image: ${GROUP_ID}/elastic-app:${SERVICE_VERSION:-latest}
    ports:
      - "5050:5050"
    restart: always
    volumes:
      - "./docker-logs:/workspace/kafka-to-elastic-service/logs"
      - "./check-elastic-cluster-up.sh:/usr/local/bin/check-elastic-cluster-up.sh"
    user: root
    entrypoint: ["check-elastic-cluster-up.sh"]
    depends_on:
      - kafka-broker-1
      - kafka-broker-2
      - kafka-broker-3
      - elastic-1
      - elastic-2
      - elastic-3
    environment:
      - "JAVA_OPTS=-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5050 -Xms128m -Xmx256m"
      - "LOGGING_LEVEL_COM_MICROSERVICES_DEMO=info"
      - "LOGGING_LEVEL_ROOT=info"
      - "ELASTIC-CONFIG_CONNECTION-URL=http://elastic-1:9200"
      - "KAFKA-CONFIG_TOPIC-NAME=twitter-topic"
      - "KAFKA-CONFIG_BOOTSTRAP-SERVERS=kafka-broker-1:9092, kafka-broker-2:9092, kafka-broker-3:9092"
      - "KAFKA-CONFIG_SCHEMA-REGISTRY-URL=http://schema-registry:8081"
    networks:
      - ${GLOBAL_NETWORK:-services}